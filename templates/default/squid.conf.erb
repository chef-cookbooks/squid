# Generated by Chef for <%= node['fqdn'] %>
# Local modifications will be overwritten.

# This file generated from a Chef template.
# squid/templates/default/squid.conf.erb

###
### Owner of process define
###

cache_effective_user <%= node['squid']['effective_user'] %>


###
### Global settings define
###

<% if node['squid']['tcp_outgoing_address'] -%>
tcp_outgoing_address <%= node['squid']['tcp_outgoing_address'] %>
<% end -%>

<% if node['squid']['listen'].kind_of?(Array) -%>
  <% node['squid']['listen'].each do |listen| -%>
http_port <%= listen %>
  <% end -%>
<% else -%>
http_port <%= node['squid']['listen'] %>
<% end -%>


###
### Athorization rules define
###

<% if node['squid']['enable_ldap'] -%>
auth_param basic program <%= node['squid']['ldap_program'] %> -v <%= node['squid']['ldap_version'] %> -b <%= node['squid']['ldap_basedn'] %> <%= "-D #{node['squid']['ldap_binddn']}" unless node['squid']['ldap_binddn'].nil? %> <%= "-w #{node['squid']['ldap_bindpassword']}" unless node['squid']['ldap_bindpassword'].nil? %> -f <%= node['squid']['ldap_searchfilter'] %> <%= node['squid']['ldap_host'] %>
auth_param basic children <%= node['squid']['ldap_authchildren'] %>
auth_param basic realm <%= node['squid']['ldap_authrealm'] %>
auth_param basic credentialsttl <%= node['squid']['ldap_authcredentialsttl'] %>
<% end -%>


###
### Networks define
###

<%= "acl all src" if node['squid']['version'].to_i < 3 %>
<%= "acl manager proto cache_object" if node['squid']['version'].to_f < 3.2 %>
<%= "acl localhost src 127.0.0.1/32" if node['squid']['version'].to_f < 3.2 %>
<%= "acl to_localhost dst 127.0.0.0/8 0.0.0.0/32" if node['squid']['version'].to_f < 3.2 %>
acl localnet src 10.0.0.0/8      # RFC1918 possible internal network
acl localnet src 172.16.0.0/12   # RFC1918 possible internal network
acl localnet src 192.168.0.0/16  # RFC1918 possible internal network
acl localnet src fc00::/7        # RFC4193 local private network range
acl localnet src fe80::/10       # RFC4291 link-local (directly-plugged) machine


###
### Ports define
###

acl SSL_ports port 443          # https
acl SSL_ports port 563          # snews
acl SSL_ports port 873          # rsync

acl SSL_ports port 465          # smtps
acl SSL_ports port 587          # smtps
acl SSL_ports port 995          # pop3s
acl SSL_ports port 993          # imap4s
acl SSL_ports port 5223         # xmpp over ssl


acl Safe_ports port 21          # ftp
acl Safe_ports port 70          # gopher
acl Safe_ports port 80          # http
acl Safe_ports port 443         # https
acl Safe_ports port 210         # wais
acl Safe_ports port 280         # http-mgmt
acl Safe_ports port 488         # gss-http
acl Safe_ports port 591         # filemaker
acl Safe_ports port 631         # cups
acl Safe_ports port 777         # multiling http
acl Safe_ports port 873         # rsync
acl Safe_ports port 901         # SWAT
acl Safe_ports port 1025-65535  # unregistered ports

acl purge method PURGE

acl CONNECT method CONNECT

<% if node['squid']['enable_ldap'] -%>
acl authorized proxy_auth REQUIRED
<% end -%>

# ACL from data_bags
<% @acls.each do |acl, options| -%>
acl <%= acl %><% if options['is_external'] -%> external<% end-%> <%= options['type'] %><% if options['modificators'] -%> <%= options['modificator'] %><% end-%> <%= options['value'] %>
<% end -%>


###
### Rules define
###

http_access allow manager localhost
http_access deny manager
http_access deny !Safe_ports
http_access allow localhost
http_access allow purge localhost
http_access deny purge
http_access deny CONNECT !SSL_ports

<% @http_access.each do |perm| -%>
http_access <%= perm %>
<% end -%>

http_access deny all


###
### Secondary global settings define
###

icp_port <%= node['squid']['icp_port'] %>
<% @icp_access.each do |perm| -%>
icp_access <%= perm %>
<% end -%>
icp_access deny all

htcp_port <%= node['squid']['htcp_port'] %>
<% @htcp_access.each do |perm| -%>
htcp_access <%= perm %>
<% end -%>
htcp_access deny all

<% if node['squid']['cache_peers'] -%>
   <% @cache_peers.each do |peer, peer_conf| -%>
cache_peer <%= peer %> <%= peer_conf['type'] %> <%= peer_conf['http-port'] %> <%= peer_conf['icp-port'] %><% if peer_conf['options'] -%><% peer_conf['options'].each do |opt| -%> <%= opt %><% end -%><% end -%>
   <% end -%>
<% end -%>

access_log <%= node['squid']['log_dir'] %>/access.log squid
cache_log <%= node['squid']['log_dir'] %>/cache.log squid
cache_store_log <%= node['squid']['log_dir'] %>/store.log squid

<% @refresh_patterns.each do |pattern, options| -%>
refresh_pattern   <% if options['ignore_case'] -%>-i<% end-%> <%= pattern %>  <%= options['min'] %> <%= options['percent'] %> <%= options['max'] %>
<% end -%>

# Add any of your own refresh_pattern entries above these.
refresh_pattern     ^ftp:                    1440 20% 10080
refresh_pattern     ^gopher:                 1440 0%  1440
refresh_pattern     -i (/cgi-bin/|\?)        0    0%  0
refresh_pattern     .                        0    20% 4320

<% if node['squid']['enable_cache_dir'] -%>
cache_dir ufs <%= node['squid']['cache_dir'] %> <%= node['squid']['cache_size'] %> 16 256
<% end -%>

coredump_dir <%= node['squid']['coredump_dir'] %>
maximum_object_size <%= node['squid']['max_obj_size'] %> <%= node['squid']['max_obj_size_unit'] %>
cache_mem <%= node['squid']['cache_mem'] %> MB

<% @directives.each do |directive| -%>
<%= directive %>
<% end -%>
